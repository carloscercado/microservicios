package com.uptos.inventory.model;
// Generated 31-may-2017 5:05:39 by Hibernate Tools 4.3.1

import java.io.IOException;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;

/**
 * Insumo generated by hbm2java
 */
public class Insumo implements java.io.Serializable
{

    private int id;
    private Categoria categoria;
    private String nombre;
    private String marca;
    private int minimo;
    private int maximo;
    private boolean perecedero;
    private int cantidad;
    private String codigo;
    private String fecha;
    private Date vencimiento;

    public Insumo()
    {
    }

    public Insumo(Categoria categoria, String nombre, String marca, boolean perecedero, String codigo, String fecha)
    {
        this.categoria = categoria;
        this.nombre = nombre;
        this.marca = marca;
        this.perecedero = perecedero;
        this.codigo = codigo;
        this.fecha = fecha;
    }

    public Insumo(int id, Categoria categoria, String nombre, String marca, int minimo, int maximo, boolean perecedero, int cantidad, String codigo)
    {
        this.id = id;
        this.categoria = categoria;
        this.nombre = nombre;
        this.marca = marca;
        this.minimo = minimo;
        this.maximo = maximo;
        this.perecedero = perecedero;
        this.cantidad = cantidad;
        this.codigo = codigo;
    }

    public int getId()
    {
        return this.id;
    }

    public void setId(int id)
    {
        this.id = id;
    }

    public Categoria getCategoria()
    {
        return this.categoria;
    }

    public void setCategoria(Categoria categoria)
    {
        this.categoria = categoria;
    }

    public String getNombre()
    {
        return this.nombre;
    }

    public void setNombre(String nombre)
    {
        this.nombre = nombre;
    }

    public String getMarca()
    {
        return this.marca;
    }

    public void setMarca(String marca)
    {
        this.marca = marca;
    }

    public int getMinimo()
    {
        return this.minimo;
    }

    public void setMinimo(int minimo)
    {
        this.minimo = minimo;
    }

    public int getMaximo()
    {
        return this.maximo;
    }

    public void setMaximo(int maximo)
    {
        this.maximo = maximo;
    }

    public boolean isPerecedero()
    {
        return this.perecedero;
    }

    public void setPerecedero(boolean perecedero)
    {
        this.perecedero = perecedero;
    }

    public int getCantidad()
    {
        return this.cantidad;
    }

    public void setCantidad(int cantidad)
    {
        this.cantidad = cantidad;
    }

    public String getCodigo()
    {
        return this.codigo;
    }

    public void setCodigo(String codigo)
    {
        this.codigo = codigo;
    }

    public String getFecha()
    {
        return fecha;
    }

    public void setFecha(String fecha)
    {
        this.fecha = fecha;
    }

    public Date getVencimiento()
    {
        return vencimiento;
    }

    public void setVencimiento(Date vencimiento)
    {
        this.vencimiento = vencimiento;
    }

    
    public void toUpper()
    {
        this.nombre = this.nombre.toUpperCase();
        this.marca = this.marca.toUpperCase();
    }

    public JsonObject validate()
    {
        JsonObjectBuilder res = Json.createObjectBuilder();

        if (this.nombre == null)
        {
            res.add("nombre", "no puede ser null");
        }

        if (this.marca == null)
        {
            res.add("marca", "no puede ser null");
        }

        if (this.codigo == null)
        {
            res.add("codigo", "no puede ser null");
        }

        if (this.perecedero)
        {
            if (this.fecha != null)
            {
                try
                {
                    vencimiento = new Date(this.fecha);
                }catch(Exception e)
                {
                    res.add("fecha de vencimiento", "formato invalido");
                }
            } else
            {
                res.add("fecha de vencimiento", "no puede ser null");
            }
        }

        if (this.categoria == null)
        {
            res.add("categoria", "categoria no existe");
        } 

        JsonObject values = res.build();
        return (values.size() == 0) ? null : values;

    }

}
